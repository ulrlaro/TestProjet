<UserControl x:Class="SystemeDeSupportCognitif_UI.Views.SecondaryWindows.GestionnaireResidencesWindow.AjouterResidencesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignWidth="800"
             d:DesignHeight="500"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <UserControl.Resources>
        <Style TargetType="StackPanel">
            <Setter Property="Margin" Value="5 0 5 0"/>

            <Setter Property="VerticalAlignment" Value="Center"/>

        </Style>

        <Style TargetType="Label">
            <Setter Property="FontSize" Value="15"/>

            <Setter Property="FontFamily" Value="Arial"/>

            <Setter Property="Foreground" Value="#d2d2d2"/>

        </Style>

        <Style TargetType="TextBox">
            <Setter Property="BorderThickness" Value="2"/>

            <Setter Property="Background" Value="#2d2d2d"/>

            <Setter Property="BorderBrush" Value="#4b4b4b"/>

            <Setter Property="FontSize" Value="18"/>

            <Setter Property="FontFamily" Value="Arial"/>

            <Setter Property="Foreground" Value="#e6e6e6"/>

        </Style>

        <Style TargetType="DatePicker">
            <Setter Property="BorderThickness" Value="2"/>

            <Setter Property="BorderBrush" Value="#4b4b4b"/>

            <Setter Property="SelectedDate" Value="{x:Static sys:DateTime.Now}"/>

            <Setter Property="FontSize" Value="18"/>

            <Setter Property="FontFamily" Value="Arial"/>

        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <DockPanel>
        <Label DockPanel.Dock="Top" HorizontalAlignment="Center" Content="Ajout de résidences" FontSize="30" FontWeight="Bold"/>

        <Button Name="AjouterLaResidenceButton" DockPanel.Dock="Bottom" Content="Ajouter la résidence" FontSize="20" FontWeight="Bold" FontFamily="Arial" VerticalAlignment="Bottom" Click="AjouterLaResidenceButton_Click">
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="15"/>

                </Style>

            </Button.Resources>

            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#4b96ff"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Margin="10 5 10 10" Padding="20" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#4ba5ff"/>

                                    </Trigger>

                                </ControlTemplate.Triggers>

                            </ControlTemplate>

                        </Setter.Value>

                    </Setter>

                </Style>

            </Button.Style>

        </Button>

        <DockPanel Margin="5 0 5 0" DockPanel.Dock="Top">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>

                    <RowDefinition/>

                    <RowDefinition/>

                    <RowDefinition/>

                    <RowDefinition Height="1.5*"/>

                </Grid.RowDefinitions>

                <UniformGrid Grid.Row="0" Rows="1" Columns="3">
                    <StackPanel>
                        <Label Content="Continent:"/>

                        <ComboBox Name="ContinentComboBox">
                            <ComboBoxItem Content="Afrique"/>

                            <ComboBoxItem Content="Amérique Central"/>

                            <ComboBoxItem Content="Amérique du Nord" IsSelected="True"/>

                            <ComboBoxItem Content="Amérique du Sud"/>

                            <ComboBoxItem Content="Antarctique"/>

                            <ComboBoxItem Content="Asie"/>

                            <ComboBoxItem Content="Europe"/>

                            <ComboBoxItem Content="Océanie"/>

                        </ComboBox>

                    </StackPanel>

                    <StackPanel>
                        <Label Content="Pays:"/>

                        <ComboBox Name="PaysComboBox" >
                            <ComboBoxItem Content="Afrique du Sud"/>

                            <ComboBoxItem Content="Afghanistan"/>

                            <ComboBoxItem Content="Albanie"/>

                            <ComboBoxItem Content="Algérie"/>

                            <ComboBoxItem Content="Allemagne"/>

                            <ComboBoxItem Content="Andorre"/>

                            <ComboBoxItem Content="Angola"/>

                            <ComboBoxItem Content="Arabie saoudite"/>

                            <ComboBoxItem Content="Argentine"/>

                            <ComboBoxItem Content="Arménie"/>

                            <ComboBoxItem Content="Australie"/>

                            <ComboBoxItem Content="Autriche"/>

                            <ComboBoxItem Content="Azerbaïdjan"/>

                            <ComboBoxItem Content="Bahamas"/>

                            <ComboBoxItem Content="Bahreïn"/>

                            <ComboBoxItem Content="Bangladesh"/>

                            <ComboBoxItem Content="Barbade"/>

                            <ComboBoxItem Content="Bélarus"/>

                            <ComboBoxItem Content="Belgique"/>

                            <ComboBoxItem Content="Bélize"/>

                            <ComboBoxItem Content="Bénin"/>

                            <ComboBoxItem Content="Bhoutan"/>

                            <ComboBoxItem Content="Birmanie"/>

                            <ComboBoxItem Content="Bolivie"/>

                            <ComboBoxItem Content="Bosnie-Herzégovine"/>

                            <ComboBoxItem Content="Botswana"/>

                            <ComboBoxItem Content="Brésil"/>

                            <ComboBoxItem Content="Brunéi Darussalam"/>

                            <ComboBoxItem Content="Bulgarie"/>

                            <ComboBoxItem Content="Burkina Faso"/>

                            <ComboBoxItem Content="Burundi"/>

                            <ComboBoxItem Content="Cameroun"/>

                            <ComboBoxItem Content="Canada" IsSelected="True"/>

                            <ComboBoxItem Content="Chili"/>

                            <ComboBoxItem Content="Chine"/>

                            <ComboBoxItem Content="Chypre"/>

                            <ComboBoxItem Content="Colombie"/>

                            <ComboBoxItem Content="Comores"/>

                            <ComboBoxItem Content="Congo"/>

                            <ComboBoxItem Content="Corée du Nord"/>

                            <ComboBoxItem Content="Corée du Sud"/>

                            <ComboBoxItem Content="Costa Rica"/>

                            <ComboBoxItem Content="Côte d’Ivoire"/>

                            <ComboBoxItem Content="Croatie"/>

                            <ComboBoxItem Content="Cuba"/>

                            <ComboBoxItem Content="Danemark"/>

                            <ComboBoxItem Content="Djibouti"/>

                            <ComboBoxItem Content="Dominique"/>

                            <ComboBoxItem Content="Égypte"/>

                            <ComboBoxItem Content="Émirats arabes unis"/>

                            <ComboBoxItem Content="Équateur"/>

                            <ComboBoxItem Content="Érythrée"/>

                            <ComboBoxItem Content="Espagne"/>

                            <ComboBoxItem Content="Estonie"/>

                            <ComboBoxItem Content="États-Unis"/>

                            <ComboBoxItem Content="Éthiopie"/>

                            <ComboBoxItem Content="Fidji"/>

                            <ComboBoxItem Content="Finlande"/>

                            <ComboBoxItem Content="France"/>

                            <ComboBoxItem Content="Gabon"/>

                            <ComboBoxItem Content="Gambie"/>

                            <ComboBoxItem Content="Géorgie"/>

                            <ComboBoxItem Content="Ghana"/>

                            <ComboBoxItem Content="Grèce"/>

                            <ComboBoxItem Content="Grenade"/>

                            <ComboBoxItem Content="Guatemala"/>

                            <ComboBoxItem Content="Guinée"/>

                            <ComboBoxItem Content="Guinée-Bissau"/>

                            <ComboBoxItem Content="Guinée équatoriale"/>

                            <ComboBoxItem Content="Guyana"/>

                            <ComboBoxItem Content="Haïti"/>

                            <ComboBoxItem Content="Honduras"/>

                            <ComboBoxItem Content="Hongrie"/>

                            <ComboBoxItem Content="Île Maurice"/>

                            <ComboBoxItem Content="Îles Marshall"/>

                            <ComboBoxItem Content="Îles Salomon"/>

                            <ComboBoxItem Content="Inde"/>

                            <ComboBoxItem Content="Indonésie"/>

                            <ComboBoxItem Content="Iran"/>

                            <ComboBoxItem Content="Iraq"/>

                            <ComboBoxItem Content="Irlande"/>

                            <ComboBoxItem Content="Islande"/>

                            <ComboBoxItem Content="Israël"/>

                            <ComboBoxItem Content="Italie"/>

                            <ComboBoxItem Content="Jamaïque"/>

                            <ComboBoxItem Content="Japon"/>

                            <ComboBoxItem Content="Jordanie"/>

                            <ComboBoxItem Content="Kazakhstan"/>

                            <ComboBoxItem Content="Kenya"/>

                            <ComboBoxItem Content="Kiribati"/>

                            <ComboBoxItem Content="Kirghizistan"/>

                            <ComboBoxItem Content="Kosovo"/>

                            <ComboBoxItem Content="Koweït"/>

                            <ComboBoxItem Content="Laos"/>

                            <ComboBoxItem Content="Lesotho"/>

                            <ComboBoxItem Content="Lettonie"/>

                            <ComboBoxItem Content="Liban"/>

                            <ComboBoxItem Content="Libéria"/>

                            <ComboBoxItem Content="Libye"/>

                            <ComboBoxItem Content="Liechtenstein"/>

                            <ComboBoxItem Content="Lituanie"/>

                            <ComboBoxItem Content="Luxembourg"/>

                            <ComboBoxItem Content="Macédoine"/>

                            <ComboBoxItem Content="Madagascar"/>

                            <ComboBoxItem Content="Malaisie"/>

                            <ComboBoxItem Content="Malawi"/>

                            <ComboBoxItem Content="Maldives"/>

                            <ComboBoxItem Content="Mali"/>

                            <ComboBoxItem Content="Malte"/>

                            <ComboBoxItem Content="Maroc"/>

                            <ComboBoxItem Content="Mauritanie"/>

                            <ComboBoxItem Content="Mexique"/>

                            <ComboBoxItem Content="Micronésie"/>

                            <ComboBoxItem Content="Moldavie"/>

                            <ComboBoxItem Content="Monaco"/>

                            <ComboBoxItem Content="Monténégro"/>

                            <ComboBoxItem Content="Mozambique"/>

                            <ComboBoxItem Content="Namibie"/>

                            <ComboBoxItem Content="Nauru"/>

                            <ComboBoxItem Content="Népal"/>

                            <ComboBoxItem Content="Nicaragua"/>

                            <ComboBoxItem Content="Niger"/>

                            <ComboBoxItem Content="Nigéria"/>

                            <ComboBoxItem Content="Norvège"/>

                            <ComboBoxItem Content="Nouvelle-Zélande	"/>

                            <ComboBoxItem Content="Oman"/>

                            <ComboBoxItem Content="Ouganda"/>

                            <ComboBoxItem Content="Ouzbékistan"/>

                            <ComboBoxItem Content="Pakistan"/>

                            <ComboBoxItem Content="Palaos"/>

                            <ComboBoxItem Content="Panamá"/>

                            <ComboBoxItem Content="Papouasie-Nouvelle-Guinée"/>

                            <ComboBoxItem Content="Paraguay"/>

                            <ComboBoxItem Content="Pays-Bas"/>

                            <ComboBoxItem Content="Pérou"/>

                            <ComboBoxItem Content="Philippines"/>

                            <ComboBoxItem Content="Pologne"/>

                            <ComboBoxItem Content="Portugal"/>

                            <ComboBoxItem Content="Qatar"/>

                            <ComboBoxItem Content="République centrafricaine"/>

                            <ComboBoxItem Content="République démocratique du Congo"/>

                            <ComboBoxItem Content="Congo"/>

                            <ComboBoxItem Content="République dominicaine"/>

                            <ComboBoxItem Content="République tchèque"/>

                            <ComboBoxItem Content="Roumanie"/>

                            <ComboBoxItem Content="Royaume-Uni"/>

                            <ComboBoxItem Content="Russie"/>

                            <ComboBoxItem Content="Rwanda"/>

                            <ComboBoxItem Content="Saint-Kitts-et-Nevis"/>

                            <ComboBoxItem Content="Sainte-Lucie"/>

                            <ComboBoxItem Content="Saint-Marin"/>

                            <ComboBoxItem Content="Saint-Vincent-et-les Grenadines"/>

                            <ComboBoxItem Content="Grenadines"/>

                            <ComboBoxItem Content="Saint-Siège"/>

                            <ComboBoxItem Content="Salvador"/>

                            <ComboBoxItem Content="Samoa"/>

                            <ComboBoxItem Content="Sao Tomé-et-Principe"/>

                            <ComboBoxItem Content="Sénégal"/>

                            <ComboBoxItem Content="Serbie"/>

                            <ComboBoxItem Content="Seychelles"/>

                            <ComboBoxItem Content="Sierra"/>

                            <ComboBoxItem Content="Singapour"/>

                            <ComboBoxItem Content="Slovaquie"/>

                            <ComboBoxItem Content="Slovénie"/>

                            <ComboBoxItem Content="Somalie"/>

                            <ComboBoxItem Content="Soudan"/>

                            <ComboBoxItem Content="Soudan du Sud"/>

                            <ComboBoxItem Content="Sri Lanka"/>

                            <ComboBoxItem Content="Suède"/>

                            <ComboBoxItem Content="Suisse"/>

                            <ComboBoxItem Content="Suriname"/>

                            <ComboBoxItem Content="Swaziland"/>

                            <ComboBoxItem Content="Syrie"/>

                            <ComboBoxItem Content="Tadjikistan"/>

                            <ComboBoxItem Content="Taïwan"/>

                            <ComboBoxItem Content="Tanzanie"/>

                            <ComboBoxItem Content="Tchad"/>

                            <ComboBoxItem Content="Thaïlande"/>

                            <ComboBoxItem Content="Timor-Oriental"/>

                            <ComboBoxItem Content="Togo"/>

                            <ComboBoxItem Content="Tonga"/>

                            <ComboBoxItem Content="Trinité-et-Tobago"/>

                            <ComboBoxItem Content="Tunisie"/>

                            <ComboBoxItem Content="Turquie"/>

                            <ComboBoxItem Content="Turkménistan"/>

                            <ComboBoxItem Content="Tuvalu"/>

                            <ComboBoxItem Content="Ukraine"/>

                            <ComboBoxItem Content="Uruguay"/>

                            <ComboBoxItem Content="Vanuatu"/>

                            <ComboBoxItem Content="Venezuela"/>

                            <ComboBoxItem Content="Vietnam"/>

                            <ComboBoxItem Content="Yémen"/>

                            <ComboBoxItem Content="Zambie"/>

                            <ComboBoxItem Content="Zimbabwe"/>

                        </ComboBox>

                    </StackPanel>

                    <StackPanel>
                        <Label Content="État / Province / Territoire:"/>

                        <TextBox Name="EtatProvinceTerritoireTextBox"/>

                    </StackPanel>

                </UniformGrid>

                <UniformGrid Grid.Row="1" Rows="1" Columns="2">
                    <StackPanel>
                        <Label Content="Ville:"/>

                        <TextBox Name="VilleTextBox"/>

                    </StackPanel>

                    <StackPanel>
                        <Label Content="Code postal:"/>

                        <TextBox Name="CodePostalTextBox"/>

                    </StackPanel>

                </UniformGrid>

                <UniformGrid Grid.Row="2" Rows="1" Columns="2">
                    <StackPanel>
                        <Label Content="Adresse:"/>

                        <TextBox Name="AdresseTextBox"/>

                    </StackPanel>

                    <StackPanel>
                        <Label Content="Numéro de téléphone:"/>

                        <TextBox Name="NumeroDeTelephoneTextBox"/>

                    </StackPanel>

                </UniformGrid>

                <UniformGrid Grid.Row="3" Rows="1" Columns="3">
                    <StackPanel>
                        <Label Content="Loyer:"/>

                        <DockPanel>
                            <TextBlock Margin="2 2 0 0" DockPanel.Dock="Right" Text="$" FontSize="18" FontFamily="Arial" Foreground="#e6e6e6"/>

                            <TextBox Name="LoyerTextBox"/>

                        </DockPanel>

                    </StackPanel>

                    <StackPanel>
                        <Label Content="Date de début:"/>

                        <DatePicker Name="DateDeDebutDatePicker"/>

                    </StackPanel>

                    <StackPanel>
                        <Label Content="Date de fin:"/>

                        <DatePicker Name="DateDeFinDatePicker"/>

                    </StackPanel>

                </UniformGrid>

                <DockPanel Margin="5 0 5 5" Grid.Row="4">
                    <Label DockPanel.Dock="Top" Content="Description:"/>

                    <TextBox Name="DescriptionTextBox" DockPanel.Dock="Top" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" AcceptsTab="True"/>

                </DockPanel>

            </Grid>

        </DockPanel>

    </DockPanel>

</UserControl>
